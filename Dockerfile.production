# Multi-stage Dockerfile for production deployment
FROM node:18-alpine AS frontend-builder

# Build frontend
WORKDIR /app/frontend
COPY frontend/package*.json ./
COPY frontend/yarn.lock ./
RUN yarn install --frozen-lockfile

COPY frontend/ ./
ENV NODE_ENV=production
RUN yarn build

# Production stage
FROM python:3.9-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    nginx \
    supervisor \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy backend code
COPY backend/ ./backend/
COPY supervisord.conf ./
COPY nginx.conf /etc/nginx/sites-available/default

# Install Python dependencies
RUN cd backend && pip install -r requirements.txt

# Copy built frontend
COPY --from=frontend-builder /app/frontend/build ./frontend/build

# Copy startup scripts
COPY start-container.sh ./
RUN chmod +x start-container.sh

# Create log directories
RUN mkdir -p /var/log/supervisor

# Expose port 80
EXPOSE 80

# Start the application
CMD ["./start-container.sh"]