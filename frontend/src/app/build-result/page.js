'use client'

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import ReactMarkdown from 'react-markdown'
import remarkGfm from 'remark-gfm'

export default function BuildResult() {
  const [buildData, setBuildData] = useState(null)
  const [isLoading, setIsLoading] = useState(true)
  const router = useRouter()

  useEffect(() => {
    const storedData = sessionStorage.getItem('pcBuildResult')
    if (storedData) {
      setBuildData(JSON.parse(storedData))
    } else {
      // Redirect to home if no data
      router.push('/')
    }
    setIsLoading(false)
  }, [router])

  const downloadAsText = () => {
    if (!buildData) return
    
    const textContent = `PC BUILD RECOMMENDATION

Budget: $${buildData.budget} ${buildData.currency || 'USD'}
Use Case: ${buildData.use_case}
Generated on: ${new Date().toLocaleDateString()}

${buildData.ai_response}

Generated by PC Builder AI
Visit: https://pcbuilderai.com
`
    
    const blob = new Blob([textContent], { type: 'text/plain' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `pc-build-${buildData.use_case}-${buildData.budget}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const shareBuild = () => {
    if (!buildData) return
    
    const text = `Check out my AI-generated $${buildData.budget} ${buildData.use_case} PC build! Built with PC Builder AI.`
    const websiteUrl = 'https://pcbuilderai.com'
    const shareUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(websiteUrl)}`
    window.open(shareUrl, '_blank')
  }

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-400 mx-auto mb-4"></div>
          <p className="text-slate-300">Loading your build...</p>
        </div>
      </div>
    )
  }

  if (!buildData) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-white mb-4">No Build Data Found</h1>
          <p className="text-slate-300 mb-6">Please generate a build first.</p>
          <button
            onClick={() => router.push('/')}
            className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors"
          >
            Go Back to Home
          </button>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900">
      {/* Header */}
      <header className="bg-slate-800 shadow-lg border-b border-slate-700">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-6">
            <div className="flex items-center">
              <button
                onClick={() => router.push('/')}
                className="text-blue-400 hover:text-blue-300 mr-4"
              >
                ← Back
              </button>
              <h1 className="text-2xl font-bold text-white">PC Builder AI</h1>
            </div>
            <nav className="hidden md:flex space-x-8">
              <a href="/" className="text-slate-300 hover:text-white">Home</a>
              <a href="/ask-ai" className="text-slate-300 hover:text-white">Ask AI</a>
              <a href="/blog" className="text-slate-300 hover:text-white">Blog</a>
            </nav>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        {/* Build Summary */}
        <div className="bg-slate-800 rounded-2xl shadow-2xl p-8 mb-8 border border-slate-700">
          <div className="text-center mb-6">
            <h1 className="text-3xl font-bold text-white mb-2">
              Your AI-Generated PC Build
            </h1>
            <div className="flex justify-center items-center space-x-4 text-sm text-slate-300">
              <span>Budget: ${buildData.budget} {buildData.currency || 'USD'}</span>
              <span>•</span>
              <span>Use Case: {buildData.use_case}</span>
              <span>•</span>
              <span>Generated: {new Date().toLocaleDateString()}</span>
            </div>
          </div>

          {/* Action Buttons */}
          <div className="flex justify-center space-x-4 mb-8">
            <button
              onClick={downloadAsText}
              className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors font-medium"
            >
              Download
            </button>
            <button
              onClick={shareBuild}
              className="bg-slate-700 text-white px-6 py-3 rounded-lg hover:bg-slate-600 transition-colors font-medium border border-slate-600"
            >
              Share Build
            </button>
          </div>

          {/* AI Response */}
          <div className="prose prose-lg max-w-none prose-invert">
            <ReactMarkdown
              remarkPlugins={[remarkGfm]}
              components={{
                a: ({ node, ...props }) => (
                  <a
                    {...props}
                    className="text-blue-400 hover:text-blue-300 underline"
                    target="_blank"
                    rel="noopener noreferrer"
                  />
                ),
                h1: ({ node, ...props }) => (
                  <h1 {...props} className="text-2xl font-bold text-white mb-4" />
                ),
                h2: ({ node, ...props }) => (
                  <h2 {...props} className="text-xl font-semibold text-white mb-3" />
                ),
                h3: ({ node, ...props }) => (
                  <h3 {...props} className="text-lg font-medium text-white mb-2" />
                ),
                ul: ({ node, ...props }) => (
                  <ul {...props} className="list-disc pl-6 mb-4" />
                ),
                ol: ({ node, ...props }) => (
                  <ol {...props} className="list-decimal pl-6 mb-4" />
                ),
                li: ({ node, ...props }) => (
                  <li {...props} className="mb-1 text-slate-300" />
                ),
                p: ({ node, ...props }) => (
                  <p {...props} className="mb-4 text-slate-300" />
                ),
                strong: ({ node, ...props }) => (
                  <strong {...props} className="font-semibold text-white" />
                ),
                code: ({ node, ...props }) => (
                  <code {...props} className="bg-slate-700 px-2 py-1 rounded text-sm text-blue-300" />
                ),
                pre: ({ node, ...props }) => (
                  <pre {...props} className="bg-slate-900 p-4 rounded-lg overflow-x-auto border border-slate-700" />
                ),
              }}
            >
              {buildData.ai_response}
            </ReactMarkdown>
          </div>
        </div>

        {/* Call to Action */}
        <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl p-8 text-white text-center">
          <h2 className="text-2xl font-bold mb-4">Need a Different Build?</h2>
          <p className="text-blue-100 mb-6">
            Try different budgets or use cases to find the perfect PC for your needs.
          </p>
          <div className="flex justify-center space-x-4">
            <button
              onClick={() => router.push('/')}
              className="bg-white text-blue-600 px-6 py-3 rounded-lg hover:bg-gray-100 transition-colors font-medium"
            >
              Generate New Build
            </button>
            <button
              onClick={() => router.push('/ask-ai')}
              className="bg-blue-700 text-white px-6 py-3 rounded-lg hover:bg-blue-800 transition-colors font-medium"
            >
              Ask AI Questions
            </button>
          </div>
        </div>
      </main>
    </div>
  )
}